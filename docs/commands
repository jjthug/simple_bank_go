sudo docker pull postgres:15-alpine
sudo docker run --name postgres15 -p 5432:5432 -e POSTGRES_USER=root -e POSTGRES_PASSWORD=secret -d postgres:15-alpine
sudo docker exec -it postgres15 psql -U root
\q to exit
sudo docker logs postgres15

dbdiagram.io
export as postgresql

migrate create -ext sql -dir db/migration -seq init_schema
migrate create -ext sql -dir db/migration -seq add_users

docker exec init -it postgres_container_name /bin/sh
createdb --username=root --owner=root simple_bank
psql simple_bank
dropdb simple_bank
exit

sudo docker start postgres15
sudo docker stop postgres15

sudo make createdb
sudo make dropdb

sqlc:
make sqlc

gin
viper
================================================
gomock, edit ~/.bashrc or zshrc or bash_profile
 go get github.com/golang/mock/
 mockgen -package mockdb -destination db/mock/store.go simple_bank/db/sqlc Store
================================================

DOCKER
sudo docker build -t simplebank:latest .

docker --help
docker images
docker ps -a
docker rmi [imageTag]
docker rm [containerId]

docker run --name simplebank --network bank-network -e GIN_MODE=release -e DB_SOURCE="postgresql://root:secret@postgres15:5432/simple_bank?sslmode=disable"
-p 8080:8080 simplebank:latest

docker network
docker network inspect bridge


CREATE NETWORK
sudo docker network create bank-network

sudo docker network inspect bank-network
sudo docker container inspect postgres15

sudo docker compose up
sudo docker compose down
sudo docker rmi simple_bank-api


openssl rand -hex 64
openssl rand -hex 64 | head -c 32

aws configure
ls -l ~/.aws
cat ~/.aws/credentials
cat ~/.aws/config

aws secretsmanager help

aws secretsmanager get-secret-value --secret-id simple_bank_secrets --query SecretString --output text

aws secretsmanager get-secret-value --secret-id simple_bank_secrets --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]'